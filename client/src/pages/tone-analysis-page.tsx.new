import { useState } from "react";
import { useMutation } from "@tanstack/react-query";
import { apiRequest, queryClient } from "@/lib/queryClient";
import { useToast } from "@/hooks/use-toast";
import { useLocation } from "wouter";
import { 
  Loader2, 
  BarChart2,
  Calendar,
  ChevronDown,
  Upload,
  Link as LinkIcon,
  FileText
} from "lucide-react";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { Textarea } from "@/components/ui/textarea";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Separator } from "@/components/ui/separator";
import Layout from "@/components/Layout";

export default function ToneAnalysisPage() {
  const [websiteUrl, setWebsiteUrl] = useState("");
  const [sampleText, setSampleText] = useState("");
  const { toast } = useToast();
  const [, navigate] = useLocation();

  const toneAnalysisMutation = useMutation({
    mutationFn: async (data: { websiteUrl?: string; sampleText?: string }) => {
      const res = await apiRequest("POST", "/api/tone-analysis", data);
      return res.json();
    },
    onSuccess: (data) => {
      queryClient.invalidateQueries({ queryKey: ["/api/tone-analyses"] });
      navigate(`/tone-results/${data.id}`);
    },
    onError: (error: Error) => {
      toast({
        title: "Analysis failed",
        description: error.message,
        variant: "destructive",
      });
    },
  });

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!websiteUrl && !sampleText) {
      toast({
        title: "Missing input",
        description: "Please provide either a website URL or sample text",
        variant: "destructive",
      });
      return;
    }
    
    toneAnalysisMutation.mutate({
      websiteUrl: websiteUrl || undefined,
      sampleText: sampleText || undefined,
    });
  };

  return (
    <Layout showSidebar={true}>
      <div className="flex-1 overflow-y-auto bg-black">
        <div className="p-6">
          {/* Header Section with Breadcrumbs */}
          <div className="mb-6">
            <div className="flex justify-between items-center">
              <div>
                <div className="flex items-center text-sm text-gray-400">
                  <span>Tovably</span>
                  <span className="mx-2">â€º</span>
                  <span>Tone Analysis</span>
                </div>
                <h1 className="text-2xl font-semibold text-white mt-1">Analyze Your Brand's Tone</h1>
              </div>
              <div className="flex space-x-3">
                <div className="flex items-center space-x-2 bg-[#111] border border-gray-800 rounded-md px-3 py-1.5 text-sm text-gray-300">
                  <Calendar className="h-4 w-4 text-gray-400" />
                  <span>Today</span>
                  <ChevronDown className="h-4 w-4 text-gray-400" />
                </div>
              </div>
            </div>
          </div>

          {/* Analysis Form Section */}
          <div className="mb-8">
            <div className="mb-4">
              <p className="text-sm text-gray-400">Let us understand your communication style to create perfectly matched content</p>
            </div>

            <Card className="bg-[#111] border-gray-800 rounded-lg overflow-hidden">
              <CardHeader className="p-4 border-b border-gray-800">
                <CardTitle className="text-lg font-medium text-white">Input Methods</CardTitle>
              </CardHeader>
              <CardContent className="p-6">
                <form onSubmit={handleSubmit} className="space-y-8">
                  <div className="grid grid-cols-1 gap-y-8 lg:grid-cols-3 lg:gap-x-8">
                    {/* Website URL Input */}
                    <div className="bg-black/20 border border-gray-800 rounded-lg p-5">
                      <div className="flex items-center mb-4">
                        <div className="w-10 h-10 rounded-full bg-[#74d1ea]/10 flex items-center justify-center">
                          <LinkIcon className="h-5 w-5 text-[#74d1ea]" />
                        </div>
                        <h3 className="ml-3 text-lg font-medium text-white">Website URL</h3>
                      </div>
                      <div className="space-y-4">
                        <div className="mt-1 flex rounded-md shadow-sm">
                          <span className="inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-700 bg-black text-gray-500 text-sm">
                            https://
                          </span>
                          <Input
                            type="text"
                            id="website-url"
                            value={websiteUrl}
                            onChange={(e) => setWebsiteUrl(e.target.value)}
                            className="rounded-l-none bg-black border-gray-700 text-white"
                            placeholder="yourwebsite.com"
                          />
                        </div>
                        <p className="text-sm text-gray-400">
                          We'll analyze public pages to determine your brand's tone
                        </p>
                      </div>
                    </div>

                    {/* File Upload Section */}
                    <div className="bg-black/20 border border-gray-800 rounded-lg p-5">
                      <div className="flex items-center mb-4">
                        <div className="w-10 h-10 rounded-full bg-[#74d1ea]/10 flex items-center justify-center">
                          <Upload className="h-5 w-5 text-[#74d1ea]" />
                        </div>
                        <h3 className="ml-3 text-lg font-medium text-white">Upload Files</h3>
                      </div>
                      <div className="flex justify-center px-4 py-5 border-2 border-dashed border-gray-700 rounded-md bg-black/30">
                        <div className="space-y-1 text-center">
                          <div className="flex flex-col items-center">
                            <Upload className="h-10 w-10 text-gray-500 mb-2" />
                            <div className="flex text-sm text-gray-400">
                              <label htmlFor="file-upload" className="relative cursor-pointer text-[#74d1ea] hover:text-[#5db8d0]">
                                <span>Upload files</span>
                                <input id="file-upload" name="file-upload" type="file" className="sr-only" multiple />
                              </label>
                              <p className="pl-1">or drag and drop</p>
                            </div>
                            <p className="text-xs text-gray-500 mt-1">
                              .txt, .docx, .pdf up to 10MB
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>

                    {/* Text Input Section */}
                    <div className="bg-black/20 border border-gray-800 rounded-lg p-5">
                      <div className="flex items-center mb-4">
                        <div className="w-10 h-10 rounded-full bg-[#74d1ea]/10 flex items-center justify-center">
                          <FileText className="h-5 w-5 text-[#74d1ea]" />
                        </div>
                        <h3 className="ml-3 text-lg font-medium text-white">Content Sample</h3>
                      </div>
                      <div className="space-y-4">
                        <Textarea
                          id="content-sample"
                          value={sampleText}
                          onChange={(e) => setSampleText(e.target.value)}
                          rows={5}
                          className="bg-black border-gray-700 text-white"
                          placeholder="Paste your blog post, email, or other content samples here..."
                        />
                        <p className="text-sm text-gray-400">
                          For best results, provide at least 200 words
                        </p>
                      </div>
                    </div>
                  </div>

                  <div className="flex justify-end pt-5">
                    <Button 
                      type="button" 
                      variant="outline"
                      className="border-gray-700 text-gray-300 hover:text-white hover:bg-gray-900"
                      onClick={() => navigate('/dashboard')}
                    >
                      Cancel
                    </Button>
                    <Button 
                      type="submit"
                      className="ml-3 bg-[#74d1ea] hover:bg-[#5db8d0] text-black"
                      disabled={toneAnalysisMutation.isPending}
                    >
                      {toneAnalysisMutation.isPending ? (
                        <>
                          <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                          Analyzing...
                        </>
                      ) : (
                        "Analyze Tone"
                      )}
                    </Button>
                  </div>
                </form>
              </CardContent>
            </Card>
          </div>

          {/* Analysis Process Section */}
          <div>
            <div className="mb-4">
              <h2 className="text-lg font-medium text-white">Our Analysis Process</h2>
              <p className="text-sm text-gray-400 mt-1">How we evaluate your brand's tone</p>
            </div>
            
            <Card className="bg-[#111] border-gray-800 rounded-lg overflow-hidden">
              <CardContent className="p-6">
                <div className="grid grid-cols-1 gap-6 md:grid-cols-3">
                  <div className="flex flex-col items-center text-center p-4">
                    <div className="w-12 h-12 rounded-full bg-[#74d1ea]/10 flex items-center justify-center mb-4">
                      <span className="text-[#74d1ea] font-medium">1</span>
                    </div>
                    <h3 className="text-white font-medium mb-2">Content Collection</h3>
                    <p className="text-gray-400 text-sm">We gather and process your provided content samples</p>
                  </div>
                  
                  <div className="flex flex-col items-center text-center p-4">
                    <div className="w-12 h-12 rounded-full bg-[#74d1ea]/10 flex items-center justify-center mb-4">
                      <span className="text-[#74d1ea] font-medium">2</span>
                    </div>
                    <h3 className="text-white font-medium mb-2">AI Analysis</h3>
                    <p className="text-gray-400 text-sm">Our AI engine identifies patterns and tone characteristics</p>
                  </div>
                  
                  <div className="flex flex-col items-center text-center p-4">
                    <div className="w-12 h-12 rounded-full bg-[#74d1ea]/10 flex items-center justify-center mb-4">
                      <span className="text-[#74d1ea] font-medium">3</span>
                    </div>
                    <h3 className="text-white font-medium mb-2">Detailed Report</h3>
                    <p className="text-gray-400 text-sm">You receive a comprehensive tone analysis with actionable insights</p>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </Layout>
  );
}